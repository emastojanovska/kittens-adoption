{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","catOwner","id","name","email","CardList","catOwners","map","m","SerachBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredcatOwners","filter","c","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,EAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACvB,6BAAKL,EAAMI,SAASE,OACpB,kCAAKN,EAAMI,SAASG,MAApB,WCLCC,G,MAAW,SAAAR,GACpB,OACI,qBAAKC,UAAW,YAAhB,SACED,EAAMS,UAAUC,KAAI,SAAAC,GAAC,OAAK,cAAC,EAAD,CAAmBP,SAAUO,GAAhBA,EAAEN,WCHtCO,G,YAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACrC,OACI,uBAAOC,KAAK,SACZd,UAAW,SACXY,YAAcA,EACdG,SAAUF,MC2BHG,E,kDA7Bb,aAAc,IAAD,8BACX,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAPrC,EAAKC,MAAQ,CACXd,UAAW,GACXW,YAAa,IAJJ,E,qDAWb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,UAAWmB,S,oBAE5C,WAAS,IAAD,EAC0BC,KAAKN,MAA/Bd,EADA,EACAA,UAAWW,EADX,EACWA,YACZU,EAAoBrB,EAAUsB,QAAO,SAAAC,GAAC,OAAIA,EAAE1B,KAAK2B,cAAcC,SAASd,EAAYa,kBAC1F,OACE,sBAAKhC,UAAU,MAAf,UACA,sDACA,cAAC,EAAD,CAAWY,YAAY,iBAAiBC,aAAee,KAAKf,eAC5D,cAAC,EAAD,CAAUL,UAAaqB,W,GAxBTK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.17081650.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = (props) => \r\n{\r\n    return(\r\n        <div className='card-container'>\r\n            <img alt=\"catOwner\" src={`https://robohash.org/${props.catOwner.id}?set=set4&size=180x180`}/>\r\n            <h2>{props.catOwner.name}</h2>\r\n            <p> {props.catOwner.email} </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\nexport const CardList = props =>{\r\n    return(\r\n        <div className= 'card-list'> \r\n        { props.catOwners.map(m => (<Card key = {m.id} catOwner={m}></Card>)) }  \r\n         </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SerachBox = ({ placeholder, handleChange }) =>{\r\n    return(\r\n        <input type='search' \r\n        className= 'search'\r\n        placeholder= {placeholder}\r\n        onChange={handleChange} />\r\n    );    \r\n}","import React, {Component} from 'react'; \nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SerachBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      catOwners: [],\n      searchField: ''\n    };\n  }\n  \n  handleChange = (e) =>{\n    this.setState({searchField: e.target.value})\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({catOwners: users}));\n  }\n render(){\n  const {catOwners, searchField} = this.state;\n  const filteredcatOwners = catOwners.filter(c => c.name.toLowerCase().includes(searchField.toLowerCase()));\n  return (    \n    <div className=\"App\">\n    <h1>Kittens for Adoption</h1>\n    <SerachBox placeholder='search kittens' handleChange={ this.handleChange }/>    \n    <CardList catOwners = {filteredcatOwners}/>       \n    </div>\n  );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}